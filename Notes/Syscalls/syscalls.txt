execve, dup, dup2, pipe, strerror, gai_strerror,
errno, dup, dup2, fork, socketpair, htons, htonl,
ntohs, ntohl, select, poll, epoll (epoll_create,
epoll_ctl, epoll_wait), kqueue (kqueue, kevent),
socket, accept, listen, send, recv, chdir bind,
connect, getaddrinfo, freeaddrinfo, setsockopt,
getsockname, getprotobyname, fcntl, close, read,
write, waitpid, kill, signal, access, stat, open,
opendir, readdir and closedir.




###########################################################################

	socketpair

#include <sys/socket.h>
int socketpair(int domain, int type, int protocol, int sv[2]);


socketpair is like a pipe BUT:

	pipe is unidirectional, while socketpair allows both users to read and write
	could get the same effect by using to pipes


so a pipe creates two fds for the same buffer, one writes and the other reads
socketpair creates, two sockets with 2 buffers each, so 2 fds for 4 buffers



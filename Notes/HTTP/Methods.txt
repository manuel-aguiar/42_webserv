

"General-purpose servers MUST support methods GET and HEAD, all others are OPTIONAL"

If origin server receives a request that is not implemented, send error code 501
Recognized, implemented but not allowed for target resource, send error code 405

Safe-methods: The client does not expect any state change on the origin server (read-only)
Idempotent Methods: multiple identical requests of the same method must have the effect of a single request
(PUT, DELETE)

METHODS

	GET
		request a representation (state) of a target resource
		primary mechanism of information retrieval

		Resource Identifiers are (usually) a remote file system pathname and its representation is simply a copy of the resource

		However a server may internally execut e stuff to generate the representation (relatórios SGC). The server is the one that
		implements what must happen given a request

	HEAD

		same as get but the server must not send any content on the response
		The objective is to test hyperlinks for instance
		The server should send the same header fileds as a GET but no response

	POST 
		intended to make changes on the server. Not required: it is the server who implements what happens (relatórios SGC).
		Server SHOULD answer with a 201 (Created) status code and a location header to the resource that was created.
		A cached POST response may be used for a subsequent GET/HEAD but not the other way around -> POST request may allter the server
		and that introduces securtiy risks
		Is POST request leads to a resource that is already produced by the server, the server MAY send the 
		Content-Location back to the client (implementation dependent)

	PUT
		Request the state of a target resource to be created or replaced by the state defined in the representation 
		enclosed in the request message content
			-> send files to a server to update stuff
		If successfull (200 OK), a subsequent GET should yield the same result that was just PUT (excluding multiple user-agents making changings in parallel)
		If the resource was CREATED, thhe servedr must answer with (201 CREATED)

		If the resource was changed, server must answer with 200 OK or 204 NO CONTENT (no further content to add in the response to the client, success)

		It is up to the server implementation to determine whether the representation received matches the metadata for that resource (in case of changes),
		clients are A**HOLES, 409 CONFLICT, 415 UNSUPPORTED MEDIA TYPE. Example:
			"For example, if the target resource is configured to always have a 
			Content-Type of "text/html" and the representation being PUT has a Content-Type of "image/jpeg"

EXAMPLE

	Browser GET Request:
		GET / HTTP/1.1
		Host: localhost:8080
		User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:129.0) Gecko/20100101 Firefox/129.0
		Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8
	


	
	
	
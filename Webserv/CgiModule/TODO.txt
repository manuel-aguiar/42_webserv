for safety of events and to avoid 
checks for failed reads, all fds 
change hands outside event 
execution

That is, workers don t reload 
during events, that will mix fds 
and epoll may trigger an event 
based on and fd NUMBER that has 
nothing to do with current fd FILE.


So, processEvents:
cleanup previous workers and 
connections, closing fds, 
unsubscribing emergencyphone from 
epoll.

Then, cleanup the Timed out 
connections. again without 
reasigning workers.


The reasign workers, open pipes, 
let the customer now execution will 
begin. Epoll fds will for.sure be 
all new when we call epoll wait.

Same will happen in the 
ServerWorker:
listrningsocket events will simply 
place the listening socket in a 
deferred list for accepting later.

Connection closing will do the 
same, we can use the ends of the 
circularqueues to put old 
connections.

During cleanup, close all deferred 
closure connections, return all 
resources. Accept all listening 
sockets and initiate all fds and 
subscriptions to epoll.

and then call epoll_wait. all 
events will therefore belong to a 
currently working fd and we avoid 
contagion from different 
files/buffers associating with the 
same fd

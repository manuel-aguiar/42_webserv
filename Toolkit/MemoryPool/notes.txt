# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    notes.txt                                          :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: mmaria-d <mmaria-d@student.42lisboa.com    +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2024/10/07 10:44:02 by mmaria-d          #+#    #+#              #
#    Updated: 2024/10/07 12:33:34 by mmaria-d         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

Memory in C++:

there is no ::realloc. that means that any allocation by an expanding vector
will always, always, imply the copying of the members of the existing vector
into a new place.

same for a std::string

so, by using memorypools for a vector or a string, the allocation pattern
will be similar as neither asks the system to grow inplace.

Nginx ngx_str_t / ngx_array_t does this however. Since the str has knowledge of the pool (no private
or public stuff), they ask the pool first to extend the location if it is available
If not, find a new location and copy the elements


Once again, C beats C++, i'm getting tired of this, really
